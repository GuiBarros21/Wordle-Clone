{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermebarros/Desktop/Wordle/src/components/Letter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { AppContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Letter(_ref) {\n  _s();\n\n  let {\n    letterPos,\n    attemptVal\n  } = _ref;\n  const {\n    board,\n    setDisabledLetters,\n    currAttempt,\n    correctWord\n  } = useContext(AppContext);\n  const letter = board[attemptVal][letterPos];\n  const correct = correctWord.toUpperCase()[letterPos] === letter;\n  const almost = !correct && letter !== \"\" && correctWord.toUpperCase().includes(letter);\n  const letterState = currAttempt.attempt > attemptVal && (correct ? \"correct\" : almost ? \"almost\" : \"error\");\n  useEffect(() => {\n    if (letter !== \"\" && !correct && !almost) {\n      console.log(letter);\n      setDisabledLetters(prev => [...prev, letter]);\n    }\n  }, [currAttempt.attempt]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"letter\",\n    id: letterState,\n    children: letter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Letter, \"KZCcoPvGVPqnR/ayGxWMRxaXc/U=\");\n\n_c = Letter;\nexport default Letter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Letter\");","map":{"version":3,"names":["React","useContext","useEffect","AppContext","Letter","letterPos","attemptVal","board","setDisabledLetters","currAttempt","correctWord","letter","correct","toUpperCase","almost","includes","letterState","attempt","console","log","prev"],"sources":["/Users/guilhermebarros/Desktop/Wordle/src/components/Letter.js"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { AppContext } from \"../App\";\n\nfunction Letter({ letterPos, attemptVal }) {\n  const { board, setDisabledLetters, currAttempt, correctWord } =\n    useContext(AppContext);\n  const letter = board[attemptVal][letterPos];\n  const correct = correctWord.toUpperCase()[letterPos] === letter;\n  const almost =\n    !correct && letter !== \"\" && correctWord.toUpperCase().includes(letter);\n  const letterState =\n    currAttempt.attempt > attemptVal &&\n    (correct ? \"correct\" : almost ? \"almost\" : \"error\");\n\n  useEffect(() => {\n    if (letter !== \"\" && !correct && !almost) {\n      console.log(letter);\n      setDisabledLetters((prev) => [...prev, letter]);\n    }\n  }, [currAttempt.attempt]);\n  return (\n    <div className=\"letter\" id={letterState}>\n      {letter}\n    </div>\n  );\n}\n\nexport default Letter;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,UAAT,QAA2B,QAA3B;;;AAEA,SAASC,MAAT,OAA2C;EAAA;;EAAA,IAA3B;IAAEC,SAAF;IAAaC;EAAb,CAA2B;EACzC,MAAM;IAAEC,KAAF;IAASC,kBAAT;IAA6BC,WAA7B;IAA0CC;EAA1C,IACJT,UAAU,CAACE,UAAD,CADZ;EAEA,MAAMQ,MAAM,GAAGJ,KAAK,CAACD,UAAD,CAAL,CAAkBD,SAAlB,CAAf;EACA,MAAMO,OAAO,GAAGF,WAAW,CAACG,WAAZ,GAA0BR,SAA1B,MAAyCM,MAAzD;EACA,MAAMG,MAAM,GACV,CAACF,OAAD,IAAYD,MAAM,KAAK,EAAvB,IAA6BD,WAAW,CAACG,WAAZ,GAA0BE,QAA1B,CAAmCJ,MAAnC,CAD/B;EAEA,MAAMK,WAAW,GACfP,WAAW,CAACQ,OAAZ,GAAsBX,UAAtB,KACCM,OAAO,GAAG,SAAH,GAAeE,MAAM,GAAG,QAAH,GAAc,OAD3C,CADF;EAIAZ,SAAS,CAAC,MAAM;IACd,IAAIS,MAAM,KAAK,EAAX,IAAiB,CAACC,OAAlB,IAA6B,CAACE,MAAlC,EAA0C;MACxCI,OAAO,CAACC,GAAR,CAAYR,MAAZ;MACAH,kBAAkB,CAAEY,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUT,MAAV,CAAX,CAAlB;IACD;EACF,CALQ,EAKN,CAACF,WAAW,CAACQ,OAAb,CALM,CAAT;EAMA,oBACE;IAAK,SAAS,EAAC,QAAf;IAAwB,EAAE,EAAED,WAA5B;IAAA,UACGL;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAtBQP,M;;KAAAA,M;AAwBT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}